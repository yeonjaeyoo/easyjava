9장. 담화 분석 - 아는 것은 믿는 것이다.

담화 분석은 자연 언어 처리의 애플리케이션의 또 다른 하나이다. 담화 분석은 AR(anaphora resolution) 같이 다른 작업을 수행하기에 유용한 문맥 정보를 결정하는 과정으로 정의될 수 있다.(우리는 9장 후반 절에서 이 부분을 다룰 것이다.)

9장에서는 다음 내용을 살펴볼 것이다.

-담화 분석 소개
-센터링 이론을 사용한 담화 분석
-Anaphora resolution(확인)

담화 분석 소개

언어적 측면에서 단어 discourse는 사용 언어를 의미한다. 담화 분석은 텍스트 해석과 사회적 상호 작용을 아는 과정과 관련된 문자 또는 언어 분석을 수행하는 과정으로 정의될 수 있다. 담화 분석은 형태소, n그램, 시제, 언어적 측면, 페이지 레이아웃 등의 처리를 포함할 수 있다. 담화는 문장의 순차 집합으로 정의될 수 있다.

대부분의 경우에, 이전 문장에 기초하여 문장의 의미를 해석할 수 있다.

"John went to the club on Saturday. He met Sam."를 상기한다. 여기서, 그는 존을 언급한다.

Page 184.

DRT(Discourse Representation Theory)는 AR을 실행하는 수단을 제공하기 위해 개발됐다. DRS(Discourse Representation Structure)는 담화 지시 대상 및 조건의 도움으로 담화의 의미를 제공하기 위해 개발됐다. 담화 지시 대상은 담화에서 1차 논리에 사용 된 변수와 관련된 것을 언급한다. 담화 표현 구조 조건은 1차 술어 논리에 사용된 기초 공식(atomic formulas)을 참조한다.

FOPL(First Order Predicate Logic)은 명제 논리의 개념을 확장하기 위해 개발됐다. FOPL은 함수, 인자 및 한정사의 사용을 포함한다. 한정사의 두 가지 유형은 일반 문장, 즉, 보편적인 한정사와 실존적 한정사를 나타내는 데 사용된다. FOPL에서는 연결어, 상수 및 변수도 사용된다. 예를 들면, 로빈은  bird(robin) 같이 FOPL에서 표현될 수 있다.

이제 담화 표현 구조의 예제를 살펴보자.

<표>

Page 185.

위의 다이어그램은 다음과 같은 문장의 표현이다.

1. John went to a club
2. John went to a club. He met Sam

여기서, 담화는 두 문장으로 구성된다. 담화 구조 표현은 전체 텍스트를 나타낼 수 있다. 계산적으로 처리중인 DRS에서, 그것은 선형 포맷으로 변환될 필요가 있다.

2016.10.19

일차 술어 논리의 구현을 제공하기 위해 사용될 수 있는 NLTK 모듈은 nltk.sem.logic이다. UML 다이어그램은 여기에 표시된다.

<그림>

Page 186.

nltk.sem.logic 모듈은 일차 술어 논리의 표현을 정의하는 데 사용된다. UML 다이어그램은 일차 술어 논리뿐만 아니라 메소드의 객체의 표현에 필요한 다양한 클래스로 구성된다. 포함된 메소드는 다음과 같다.

-substitute_bindings(bindings): 여기에서, 바인딩은 variable-to-expression 매핑을 나타낸다. 그것은 특정 값으로 표현에 존재하는 변수를 대체한다.

-Variables(): 대체될 필요가 있는 모든 변수 집합을 포함한다. 그것은 상수뿐만 아니라 자유 변수로 구성된다.

-replace(variable, expression, replace_bound): 이것은 변수 인스턴스에 대한 표현식을 대체하기 위해 사용한다. replace_bound는 바운드 변수 교체 여부를 지정하는 데 사용된다.

-Normalize(): 자동생성된 고유의 변수 이름을 변경하는 데 사용된다.

-Visit(self,function,combinatory,default): 이것은 함수를 호출하는 서브표현식을 방문하는 데 사용된다. 결과는 기본 값으로 시작하는 조합(combinator)에 전달된다. 조합의 결과는 반환된다.

-free(indvar_only): 오브젝트의 모든 자유 변수의 세트를 반환하는 데 사용된다. indvar_only가 True로 설정된다면 개별 변수가 반환된다.

-Simplify(): 오브젝트를 나타내는 표현식을 단순화하기 위해 사용된다.

담화 표현 이론의 기초를 제공하는 NLTK 모듈은 nltk.sem.drt이다. 그것은 nltk.sem.logic의 상단에 위치한다. UML 클래스 다이어그램은 nltk.sem.logic 모듈에서 상속된 클래스를 포함한다. 다음은 이 모듈에 속한 메소드이다.

-get_refs(recursive): 이 메소드는 현재 논의에 대한 지시 대상을 얻는다.
-fol(): 이 메소드는 일차 술어 논리로 DRS의 변환에 사용된다.
-draw(): 이 메소드는 Tkinter graphics 라이브러리의 도움으로 DRS를 그리기 위해 사용된다.

Page 187.



