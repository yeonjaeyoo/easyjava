Page 1.

이 책 전반에 걸쳐서, 구/신 자바 기술을 사용하여 많은 네트워크 개념, 아이디어, 패턴, 구현 전략을 배울 수 있습니다.
네트워크 연결은  로우 레벨은 소켓의 사용으로, 더 하이 레벨은 다수 프토토콜의 사용으로 발생한다.
커뮤니케이션은 요청과 응답의 적절한 조절로 동기화 되거나, 다른 활동이 수행되는 곳에서 응답이 전송될 때까지, 비동기 될 수 있다.

Page 2.

이러한 다양한 개념은 각 장에 특정한 주제로 설명했다. 각 장은 앞서 소개한 개념들을 서로 연관시켜 소개한다. 다양한 예제 코드는 주제에 대한 이해를 향상하도록 사용합니다.
서비스 접속의 요점은 주소(address)를 발견하거나 아는 것이다. 주소는  www.packtpub.com이나 IP address(83.166.169.231)의 형태로 사람이 읽을 수 있다.
인터넷 프로토콜(Internet Protocol, IP)은 인터넷 상의 정보를 액세스하기 위해 사용되는 로우 레벨의 주소 체계이다. 자원에 접근하는 주소는 오랫동안 IPv4를 사용하고 있다.

2016.02.17
서비스는 서버에 의해 제공된다. 간단한 예는 에코 서버인데, 에코 서버는 전송된 것을 재전송한다. HTTP 서버와 같은 더 정교한 서버는 다양한 요구를 만족시키기 위해 광범위한 서비스를 지원할 수 있다.
클라이언트/서버 모델과 자바 지원은 3 장(네트워킹 NIO 지원)에서 배운다.
 
다른 서비스 모델은 피어 투 피어(peer-to-peer, P2P) 모델이다. P2P 아키텍쳐는 중앙 서버는 없고, 오히려 서비스를 제공하는 통신 애플리케이션 네트워크가 있다.
P2P 모델은 비트토런트(BitTorrent), 스카이프(Skype), 그리고 BBC의 아이 플레이어(iPlayer)와 같은 응용프로그램에서 볼 수 있다.
이러한 유형의 응용프로그램 개발에 필요한 지원의 대부분은 이 책의 범위를 벗어나지만, 제 4장(클라이언트/서버 개발)에서, P2P 이슈와 함께 자바와 JXTA가 제공하는 지원을 알아보자.

IP는 네트워크를 통해 정보의 패킷을 송수신하기 위해 로우 레벨로 사용된다. 또한 UDP(User Datagram Protocol)와 TCP(Transmission Control Protocol) 통신 프로토콜의 사용을 설명 할 것이다.
UDP, TCP 프로토콜은 IP의 상층부에 위치하고 있다. UDP는 신뢰성 있는 전송에 대한 보장이 없어 짧은 패킷이나 메시지를 브로트케스트(broadcast) 하는데 사용된다.
TCP는 일반적으로 UDP보다 더 높은 서비스 수준을 제공한다. 제 5장(P2P 네트워크)에서 관련 기술의 사용을 배울 것이다.

Page 3.

