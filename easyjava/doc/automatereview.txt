전자 메일 => 이메일?

이메일 통신은 지난 몇 십년 동안 정보 교환의 주요한 방식이 됐다.

하지 않을까? => 하지 않는가?

소개

안녕, 여러분. 좋은 하루 보내고 있길 희망한다.

email => 이메일

유스 케이스의 도움을 받아 => 사용 사례의 도움으로

이해할 것이다. => 살펴볼 것이다.

그럼 무엇을 기다리는가?

전자메일 => 이메일

그들은 => 이메일은

과거에는, 이메일이 통신이 성공하기 위해서는 발송자와 수신자가 온라인 상태여야 했다.

말이 안 된다고 생각하지?

점포 및 철학? => 가게 앞을 내다보는 철학을 공부하기 시작했다.

나중에 편리하게 => 나중에 편하게 확인할 수 있다.

이메일 메시지는 ASCII전용 문자로 시작했고, 나중에 풍부한 텍스트 및 첨부파일을 위한 MIME(Multipurpose Internet Mail Extensions)로 확장됐다.

프로토콜의 관점에서 보면, 이메일은 처음에 컴퓨터를 통해 메시지를 보내기 위해 FTP(File Transfer Protocol)로 작업했지만, 아시다 시피 SMTP(Simple Mail Transfer Protocol)는 이메일 작업에 가장 널리 사용되는 프로토콜이다.

중요표시시작

시작하는 데 => 설정을 시작하는 데

Gmail 웹 클라이언트에 적용되는 예제를 살펴보면, 여러분이 직접 이메일 서버를 설정하지 않고도 코드 예제를 신속하게 시도하고 파이썬을 사용하여 이메일 작업을 자동화할 수 있다는 것을 이해할 수 있다.
Gmail을 예제로 사용하고 있지만, 이러한 일부 정보들은 이메일 전송을 위한 SMTP와 이메일 검색을 위한 IMAP을 지원하는 다른 이메일 서버와도 연동된다.

Page 2.

중요표시시작

파이썬을 사용하여 이메일로 작업하면 메시지를 작성하는 데 도움이 되는 모듈 그리고 이메일을 전송할 수 있는 모듈, 메시지를 검색하고 업데이트하는 데 도움이 되는 모듈이 필요하다.

준비하기

선호하는 pip 도구로 smtplib를 설치할 수 있다.

실행방법

1.

조각을 => X

설정 파일에는 이메일 주소, 패스워드 및 이메일을 전송해야 하는 이메일 주소와 같은 로그인 상세 내역이 있다.

2.

환경 파일 => 설정 파일

작성해보자. => 작성하자.

Page 3.

4.

예외 => 예외(exceptions)

예외는 다음과 같다.

5.

예외(Exception)는 서버에 로그인하는 것이 좋다고 하지만 Gmail은 여러분이 메시지를 전송하는 것을 블록했다.

안정성이 => 보안성이

그래 => 예

6.

다음 스크린샷과 같이 이 설정을 설정할 수 있는 Less secure apps 페이지로 이동한다.

7.

이제 Gmail 웹 클라이언트에서 로그아웃 했다가 다시 로그인하여 이 설정이 계정에 적용되도록 한다. 이 과정이 정상적으로 진행된 경우 Google에서 Access for less secure apps이 설정됐다는 이메일을 받는다. 구글의 확인 이메일은 이 스크린샷과 유사하다.

8.

시원해 => 좋아. 유의하라, 

메시지 내용은 => 메시지 콘텐츠는 코드에 추가한 것과 같다.

사용자가 => 여러분이 전송한 것이지만, 제목이 없으므로 좋지않다.

작동원리

코드 조각을 => 코드를

Page 4.

일단 서버 객체 server가 생기면

비밀번호 => 패스워드

server.starttls() => server.starttls();

더 알아보기

기본 전자 메일을 보내는 방법을 => 기본적인 이메일 전송 방법을

이 레시피가 우리를 시작하게 하는 동안, 다음 레시피에서 자세히 조사할 것이 더 있다. 그것들을 살펴보자.

이메일 암호화

내용을 => 콘텐츠를

준비하기

레서피 => 레시피

기본 => 기본적인

작동하나? => 작동할까?

1.

코드 조각을 => 코드를

2.

부문으로 => 세그먼트로

Page 5.

3.

서버 객체에서 => server 객체에서

작동원리

이메일 암호화는 이메일 메시지가 의도한 당사자가 아닌 다른 사람이 읽지 못하도록 보호하는 것을 의미한다.

여기에는 인증도 포함될 수 있다.

하지만, STARTTLS(SMTP 상위 계층)의 출현과 메시지 제출을 위한 포트 587의 사용으로, Gmail과 같은 이메일 클라이언트는 이메일 전송에 STARTTLS와 포트 587을 사용한다.

Gmail에도 인증이 구현된다.

확장자 => 확장명

server.ehlo( => server.ehlo()를 전송할 때

extension => 용어 통일. 확장? 확장명? 확장자?

마지막으로 server.quit()를 사용하여 SMTP세션을 종료했으며, 세번째 스크린 샷에 표시된 것처럼 closing connection으로 응답한다.

더 알아보기

2018.02.26

잠시 시간을 내어 이해해본다. 

보내는 것에서 => 전송하는 것에서

걱정하지마. => 걱정하지말자.

MIME로 이메일 메시지 꾸미기

처음 몇 가지 레시피는 간단하고 오래된 평문으로 이메일을 전송했다.

Page 6.

MIME 인터넷 표준은 비 ASCII 문자, 멀티파트(multipart) 메시지 및 이미지를 사용하여 메시지를 작성하도록 도와준다.

첨부 파일 => 첨부파일?

실행방법

3.

자, 이제 누구에게 이메일을 전송할 것인지에 대한 세부 사항을 알게됐다.

보내자. => 전송하자.

작동원리

앞의 예제에서는 SMTP서버에 로그인하기 위해 fromaddress 및 password를 받은 설정 파일과 이메일 메시지를 전송할 toaddress를 가져왔다.

모르는 사람을 위해, MIME 멀티파트 메시지는 하나의 이메일에 있는 HTML과 텍스트 콘텐츠 모두를 의미한다.

multipart => 멀티파트

내용을 => 콘텐츠를

내용은 => 콘텐츠는

multipart 메시지에 => 멀티파트 메시지에

메시지와 수신자 상세 내역이 있으면 SMTP.sendmail() 메소드를 사용하여 평소대로 이메일을 전송한다.

첨부 파일과 이메일 메시지

Page 7.

실행방법

1. 그 내용은 => 그 콘텐츠는

3.

받은 편지함 => 받은편지함

작동원리

multipart => 멀티파트

다른 새로운 => 새

파일 핸들 첨부 파일을 => 파일 핸들 attachment를

내용을 => 콘텐츠를

추가한다. => 추가되어야 한다.

multipart => 멀티파트(multipart)

Page 9.

좋아, 그래서 완전한 MIME 메시지와 그 메시지를 누구에게 보낼지에 대한 세부 사항을 가진다.

첨부 파일이 있는 => 첨부 파일이 포함된

성취하고자 했던 것을 수행했다.

받은편지함 연결

것에 대해 이야기했다. => 것을 살펴봤다.

그러나 경우에 따라 받은편지함을 스캔하여 수신되는 메시지를 읽을 수도 있다.

준비하기

기본 파이썬 설치에서 => 기본 파이썬 설치로

실행방법

1.

환경 파일을 => 설정 파일을

코드는 다음과 같다.

2.

Gmail => 지메일

받은 편지함 => 받은편지함

이제 모든 라벨에서 Inbox를 선택하려는 경우에도 이를 달성할 수 있다.

이전 코드의 출력은 다음 스크린샷에 표시된다. 라벨을 여러개 생성했는데도 라벨이 더 적은 스크린 샷을 가져왔다.(확인)

Page 10.

작동원리

5장을 시작하면서 살펴본 바와 같이, 이메일로 작업할 수 있는 세가지 주요 프로토콜이 있다. 이메일을 전송하기 위해 SMTP를 많이 사용했지만 이메일을 읽는 동안 POP 혹은 IMAP를 사용하여 이메일 서버에서 메시지를 검색할 수 있다. 단계적으로 그 코드를 살펴볼 것이다.

Gmail 서버는 => 지메일 서버는

생성자~  => 생성자~ ;

내부적으로 평문(clear text) 소켓을 사용하는 IMAP4클래스의 사용을 배제한다.

받은 편지함 => 받은 편지함

제 경우 => 이 경우

레이블 목록 => 라벨 목록

닫는다. => 종료한다.

그래! 그것은 좋고 쉽다.

더 알아보기

그래서, 이 레시피에서 받은편지함에 연결하는 방법을 다뤘지만, 아마도 메시지를 읽고, 표시하고, 그것에 대해 흥미로운 행동을 하고 싶어할 것이다. 다음 레시피에서 어떻게 메시지에 대한 작업을 하는지 살펴보자.

이메일 메시지 가져오기 및 읽기

이 레시피에서는 특정 제목의 이메일을 검색하여 미리 정의된 조건과 일치하는 최신 메시지를 받은 편지함에서 가져온다.

실행방법

환경 파일을 => 설정 파일을

Page 11.

3.

코드 조각의 출력은 => 코드의 출력은

작동원리

코드 조각에서 => 코드에서

환경 파일의 => 설정 파일의

그런 다음 그곳에서 검색 작업을 수행할 수 있도록 INBOX를 선택한다.

제목이 포함된 => 제목인

기준과 일치하는 가장 최근의 이메일 객체를 전달하고, RFC 822 형식의 이메일 본문을 원하는 RFC822를 전달한다.

fetch()를 통해 얻은 메시지를 출력하면, 검색과 일치하는 최신 이메일의 이메일 본문의 콘텐츠를 받게된다.

지금, 여러분은 이메일의 콘텐츠를 기억하는가?

글쎄, 이메일 첨부 파일을 보여 주는 데 사용된 이전의 레시피의 중의 하나에서 전송한 동일한 이메일 메시지다.

더 알아보기

받은편지함에 표시하고 싶은 메시지를 포함하여 더 세분화된 작업이 많이 있다. 다음 레시피에서 살펴보자. 

이메일 메시지 표시

검색이나 읽기 같은 간단한 작업을 하는 동안 그렇게 많은 세부 정보를 처리해야할까?

준비하기

pip 명령을 => pip 커멘드를

터미널을 통해 => 터미널로

gmail API를 사용하여 이메일을 검색하고 읽는 방법을 살펴보자.

gmail 모듈로 시작하게 할 것이다.

다음 코드는 2016년 7월 22일 이후 수신된 이메일을 검색한다.

이 후 가장 최근의 메시지를 가져왔다.

일단 메시지를 가져오면, 그냥 이메일 본문을 읽어본다.

Page 12.

너무 쉽지 않았는가? 그런데, gmail 모듈이 imaplib 위에 쓰여 있지만 더 나은 API가 있으니, 이 모듈을 이용해서 환상적인 작업을 하자.

실행방법

1.

받은 편지함을 열고 특정 조건과 일치하는 읽지 않은 메시지를 찾아 메시지를 읽은 것으로 표시한다.

받은 메일함 => 받은 편지함

이 프로그램을 실행하기 전에, https://glassdoor.com에서 제가 읽지 않은 이메일을 한통 받았다. 제 받은 편지함에 이렇게 나와 있다.

코드를 실행한 후에, 그것은 이 이메일이 noreply@glassdoor.com의 읽지 않은 메시지의 기준과 일치한다는 것을 확인했고, 내 메시지를 읽은 것으로 표시했다.

지메일은 읽기 메시지를 볼드체를 해제하고 그것이 내 받은 편지함에서 일어난 일이다.(확인)

2.

메일함 => 편지함?

Page 13.

3. 

이제, 이 모든 것을 read로 표시하고 한 가지 라벨 AMAZON 아래에 배치하고 싶다.

있니? => 있을까?

작동원리

Gmail => 지메일

이제 이 객체를 사용하여 undread하고 noreply@glassdoor.in에 의해 전송된 이메일을 검색하기 시작하고 이 기준과 일치하는 모든 메일 객체가 mails에 저장된다.(확인)

나중에 최신 레코드를 fetch() 메소드로 가져와서 read() 메소드로 읽은 메일로 표시한다.

아주 쉽게 할 수 있다, 멋지다.

더 알아보기

중요하게 => 중요한 것으로

받은 편지함 =? 받은 메일함? 통합

받은 편지함의 이메일 메시지 삭제

Page 14.

중요표시시작

따라서 메시지를 삭제할 때 서버 구현에 따라 이메일 서버에 계속 저장할 수 있도록 메시지를 받은 편지함에서 숨김 상태로 표시하기만 하면 된다.

중요표시종료

준비하기

이 레시피에 => 이 레시피는

실행방법

1.

환경 파일을 => 설정 파일을 활용하여

가져와 => 가져와서

작동원리

환경 파일 => 설정 파일

로그인 자격 증명 => 용어 확인

그런 다음 받은 메일함에 연결하고 junk@xyz.com.에서 들어오는 이메일을 검색한다.

반복 처리하고 => 반복하여

정크 메일 => 정크로

더 알아보기

그래서 이제 이메일 메시지를 전송, 첨부 추가, 그것들을 가져와서 읽는 방법을 알고 있다.

레이블을 => 라벨을

이 지식으로 무장하여, 약간의 문제가 있는 켈리를 위해 무언가를 할 수 있을까?

Page 15.
















