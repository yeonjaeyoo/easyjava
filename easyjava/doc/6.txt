6장.UDP와 멀티캐스팅

UDP(User Datagram Protocol)는 IP의 위쪽에 위치하고 TCP에 비교하여 신뢰할 수 없다. UDP는 네트워크에서 두 노드 간의 개별적인 패킷을 전송한다. UDP 패킷은 다른 패킷에 대한 지식을 가지고 있지 않으며, 실제로 패킷이 의도한 목적지에 도착한다는 보장은 하지 않는다. 다수의 패킷이 전송되는 경우, 도착 순위의 보증은 없다. 수신인에서 보낸 인식이 없는 것처럼 UDP 메시지는 단순히 전송한 후 잊어버린다.

UDP는 비연결 프로토콜이다. 패킷 전송을 용이하게 하는 두 노드들 간의 메시지 교환은 없다. 접속에 대한 어떠한 상태 정보도 유지되지 않는다. 

UDP는 전달은 효율적으로 필요한 곳의 서비스에 적합하고, 전달의 보장이 필요하지는 않다. 예를 들어, DNS(Domain Name System)의 서비스, NTP(Network Time Protocol) 서비스, VOIP(Voice Over IP), P2P 네트워크에서 네트워크 통신의 조정과 비디오 스트리밍을 위해 사용된다. 비디오 프레임이 손실되는 경우, 손실이 자주 발생하지 않는다면, 뷰어(viewer)는 알 수 없다.

다음을 포함한 UDP를 사용하는 여러 프로토콜이 있다.

2016.05.18

-RTSP(Real Time Streaming Protocol): 이 프로토콜은 미디어 스트리밍을 제어하기 위해 사용된다.
-RIP(Routing Information Protocol): 이 프로토콜은 패킷을 전송하는 데 사용되는 경로를 결정한다.
-DNS(Domain Name System): 이 프로토콜은 인터넷 도메인 이름을 검색하고 그 IP 주소를 반환한다.
-NTP(Network Time Protocol): 이 프로토콜은 인터넷을 통해 시각을 동기화한다.

Page 140.

UDP 패킷은 목적지를 식별할 수 있는 IP 주소와 포트 번호로 구성된다. UDP 패킷은 고정된 크기를 가지며 65,353 바이트만큼 클 수 있다. 그러나 각 패킷은 65507 바이트의 메시지의 크기를 제한하는 IP 헤더를 위해서는 최소 20 바이트로 사용하고 UDP 헤더는 최소 8 바이트로 사용한다. 메시지가 그것보다 큰 경우, 다수의 패킷이 전송될 필요가 있을 것이다.

UDP 패킷은 또한 멀티캐스트 할 수 있다. 이것은 패킷이 UDP 그룹에 속한 모든 노드로 전송되는 것을 의미한다. 명시적으로 각각의 노드를 대상없이 여러 노드에 정보를 전송하는 효율적인 방법이다. 대신에 패킷은 그 그룹의 패킷을 캡처할 책임이 있는 멤버의 그룹에 전송된다.

6장에서는 UDP 프로토콜을 사용할 수 있는 방법을 설명한다. 

-기존의 클라이언트/서버 모델 지원
-UDP 작업을 수행하는 NIO 채널을 사용
-그룹 멤버들에게 패킷을 멀티캐스트
-클라이언트에게 오디오 혹은 비디오 같은 스트림 미디어

UDP에 대한 자바 지원의 개요로 시작하고 더 많은 UDP 프로토콜 정보를 제공한다.

UDP에 대한 Java 지원

자바는 노드간에 소켓 연결을 형성하는 DatagramSocket 클래스를 사용한다. DatagramPacket 클래스는 데이터 패킷을 나타낸다. 단순한 send 및 receive 메소드는 네트워크를 통해 패킷을 전송할 것이다.

2016.05.19
UDP는 노드를 식별하는 데 IP 주소와 포트 번호를 사용한다. UDP 포트 번호는 0에서 65535까지다. 포트 번호는 세 종류로 분류된다.

-잘 알려진 포트(0 ~ 1023): 상대적으로 공통 서비스에 사용되는 포트 번호이다.
-등록된 포트(1024 ~ 49151): 프로세스를 위해 IANA에서 할당된 포트 번호이다.
-동적/사설 포트(49152 ~ 65535): 연결이 초기화될 때 동적으로 클라이언트에 할당된다. 일반적으로 일시적이며 IANA에 의해 할당할 수 없다.

Page 141.

다음 표는 UDP 특정 포트 할당의 간단한 목록이다. UDP가 강범위하게 많고 다양한 애플리케이션과 서비스를 지원하는 데 사용되는 방법을 예시한다. TCP/UDP 포트 번호의 보다 완전한 목록은 https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers에서 확인한다.

<표>

다음 표는 등록된 포트 및 그 사용 목록을 보여준다.

<표>

Page 142.

TCP 대 UDP

TCP와 UDP 간의 몇 가지 차이가 있다. 이러한 차이는 다음과 같다.

-신뢰성(Reliability): TCP는 UDP보다 더 신뢰할 수 있다.
-순서(Ordering): TCP는 패킷 전송의 순서가 유지되는 것을 보장한다.
-헤더 크기(Header size): UDP 헤더는 TCP 헤더보다 작다.
-속도(Speed): UDP는 TCP보다 빠르다.

패킷이 TCP를 이용하여 전송될 때, 패킷이 도착하는 것을 보장한다. 분실되면, 다시 전송된다. UDP는 이 보장을 제공하지 않는다. 패킷이 도착하지 않는 경우, 다시 전송되지 않는다.

TCP는 패킷의 전송 순서를 보장하지만, UDP는 보장하지 않는다. TCP 패킷들이 전송된 방법과 다른 순서로 목적지에 도달하는 경우, TCP는 원래 순서대로 패킷을 조립할 것이다. UDP의 경우, 이 순서는 유지되지 않는다.

패킷이 생성될 때, 헤더 정보는 패킷의 전달을 지원하기 위해 부착된다. TCP 헤더의 일반적인 크기는 32 바이트이다.

신뢰성을 확보하기 위한 작은 헤더 크기와 오버 헤드의 부족으로, UDP는 TCP보다 더 효율적이다. 또한, 작은 노력으로 연결을 생성할 필요가 있다. 이 효율성은 미디어를 스트리밍하기 위한 더 나은 선택을 만든다.

전통적인 클라이언트/서버 아키텍처를 지원하는 방법을 UDP 예제로 시작하자.

UDP 클라이언트/서버

UDP 클라이언트/서버 애플리케이션은 TCP 클라이언트/서버 애플리케이션에 사용되는 구조와 유사하다. 서버 측면에서, 생성된 UDP 서버 소켓은 클라이언트 요청을 기다린다. 클라이언트는 대응하는 UDP 소켓을 생성하고, 서버에 메시지를 전송하는 데 사용된다. 그러면 서버는 요청을 처리하고 응답을 전송할 수 있다.

UDP 클라이언트/서버는 메시지를 보유하는 DatagramPacket과 소켓을 위한 DatagramSocket 클래스를 사용한다. 메시지의 콘텐츠 타입은 제한이 없다. 예제에서는 텍스트 메시지를 사용할 것이다.

Page 143.

UDP 서버 애플리케이션

서버는 다음에 정의된다.  
