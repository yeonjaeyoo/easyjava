Page 273.

9장. 이미지 상상

거의 매일 기본적으로 이미지로 작업한다. 페이스북 프로필 페이지로 이미지를 업로드하거나 모바일 혹은 웹 애플리케이션을 개발하는 동안 이미지를 조작한다. 풍부한 유스 케이스가 있다. 컴퓨터 비전 분야에서 많은 진보와 함께 이미징은 중요한 분야가 됐다. 이미지 작업은 파이썬에서는 하찮은 작업이다.

9장에서는 다음과 같은 레시피를 다룰 것이다.

-이미지 전환
-리사이징, 자르기 및 썸네일 생성
-복사-붙여 넣기 및 이미지 워터 마킹
-이미지 차이와 비교
-얼굴 감지
-비즈니스 프로세스로 이미지 생성

소개

전자 세계의 이미지는 0과 1로 구성된 비트이다. 그것들은 장면이나 문서의 전자 스냅샷이다. 그림 혹은 사진조차도 디지털화하여 이미지를 형성할 수 있다. 이미지를 더 깊이 이해하고 이미지가 어떻게 구성되어 있는지 살펴보자.

모든 이미지는 샘플링되며 픽셀(pixels)이라는 점 격자로 표시된다. 이 픽셀은 화면에 표시된 그림의 최소 제어 가능 요소를 나타낸다. 이미지에서 사용할 수 있는 픽셀 수가 많을수록 장치 화면에서는 이미지가 더 정확하게 표시된다.

Page 274.

각 픽셀의 강도(intensity)는 가변적이다. 디지털 세계에서 이미지의 색상은 gred, green 및 blue(RGB) 또는 Cyan, Magenta, Yellow 및 Black(CMYK)의 세 가지 혹은 네 가지 강도로 표현된다. 컴퓨터 프로그램은 종종 RGBA 형식의 색상을 나타내며, 여기서 A는 알파(또는 색상의 투명도)를 나타낸다. 각 픽셀은 RGBA 형식의 이진 표현으로 표현되며 시퀀스로 컴퓨터에 의해 저장된다. 컴퓨터는 디스플레이를 위해 이 순서를 읽고 경우에 따라 인쇄용 아날로그 버전으로 변환한다. 특정 이미지 속성을 자세히 살펴보자.

이미지 속성

이미지 속성의 일부를 살펴보자.

-이미지 크기: 앞서 배웠듯이 컴퓨터 이미지는 0과 1로 저장되며 픽셀(직사각형 점) 단위로 측정된다. 이미지의 파일 크기는 포함된 픽셀 수와 저장된 색상 정보의 양에 따라 계산된다. 실제로 파일 크기는 컴퓨터 하드 드라이브의 이미지가 차지하는 공간이다.
-비트 심도(Bit depth): 단일 픽셀의 색상을 나타내는 데 사용되는 비트 수이다. 이 개념은 픽셀을 설명하는 데 사용되는 비트 수를 나타내는 픽셀 당 비트 수로 정의할 수 있다. 이미지의 비트 심도가 클수록 저장할 수 있는 색의 숫자는 커진다. 1 비트 이미지에는 0과 1의 2개(2 ^ 1)의 색만 저장할 수 있으므로 흰색과 흑백으로 표시된다. 그것과 비교할 때, 8 비트 이미지는 256(2^8) 색상을 저장할 수 있다.
-이미지 해상도: 해상도는 이미지의 픽셀 수를 나타낸다. 해상도는 때때로 이미지의 폭(width)과 높이(height)로 식별된다. 예를 들어 1,920 x 1,024 픽셀 해상도의 이미지는 1,966,080 픽셀을 포함하거나 1.9-메가픽셀 이미지이다.
-화질: 이미지가 저장하는 정보에 따라 변경할 수 있다. 모든 이미지가 이미지를 나타내기 위해 모든 픽셀을 저장해야 하는 것은 아니다. 예를 들어, 사진의 푸른 바다의 연속 블록은 모든 픽셀을 가질 필요는 없으며 이미지는 이미지 품질을 손상시키지 않으면서 이미지의 디스크 공간을 줄이기 위해 압축될 수 있다. 이러한 디스크 공간의 축소를 압축이라한다. 높은 압축은 눈에 띄는 세부 묘사를 의미한다. 오늘날의 세계에서 사용되는 일반적인 압축 유형은 JPG 압축이며, 크기 및 이미지 품질을 희생한다.

Page 275.

-이미지 형식: 이미지는 다른 확장명을 가진 컴퓨터에 저장된다. BMP 혹은 TIF와 같은 형식은 전혀 압축되지 않는다. 따라서 더 많은 디스크 공간을 차지한다. JPG와 같은 파일은 압축할 수 있으며 압축 수준을 선택할 수도 있다. 따라서 TIF 이미지는 무손실이고 JPG 압축은 손실 압축(lossy compressions)이라고 한다. 손실 압축은 사람의 음영 차이를 차별화하지 못하는 것을 사용한다는 점이 흥미롭다. 다수의 손실이 있는 변환은 이미지 품질 저하를 초래하지만 여러 번의 무손실 변환은 이미지 품질을 보존한다. 그러나 일반적으로 압축과 관련하여 이미지 저하와 크기 사이의 절충점이다.

좋아, 좋은 시작이다. 9장에서는 이미지에 대한 더 많은 개념을 살펴보고 파이썬으로 이미지에서 수행할 수 있는 다양한 작업을 다룬다. 이미지를 조작하는 데 도움이 되는 여러 모듈을 살펴볼 것이다. 9장의 마지막 부분에서는 9장에서 다룬 레시피를 활용한 지식으로 자동화할 수 있는 일반적인 비즈니스 프로세스에 대해서도 다룰 것이다.

9장에서는 다음 파이썬 모듈을 사용한다.

-Pillow(https://pypi.python.org/pypi/Pillow)
-scipy(https://www.scipy.org/)
-opencv(https://pypi.python.org/pypi/opencv-python)

이미지 변환하기

간단한 예제를 들어 이미지 여행을 시작하자. 그러나 계속하기 전에 가상 환경을 구축하자.

1. virtualenv 커맨드를 사용하여 가상 환경을 구축하고 활성화한다.

<소스>

2. 좋아! 이제 9장에 대한 레시피로 작업할 독립적인 환경을 구성했다. 첫 번째 예제에서는 파이썬의 Pillow 모듈을 사용한다. 레시피로 가기 전에 먼저 이 모듈을 설치하자. Pillow 모듈을 설치하기 위해 가장 좋아하는 python-pip를 사용할 것이다.

<소스>

이제 환경이 생겼고 Pillow 모듈도 설치됐다. 이제 레시피 작업 준비가 끝났다.

실행방법

이 절에서는 이미지를 다른 형식으로 변환하는 방법을 다룰 것이다.

1. 먼저 모든 작업을 수행하기 위해 샘플 이미지로 사용할 수 있는 이미지를 다운로드하자. 나는 일몰을 좋아한다. 그래서 9장의 대부분의 레시피에 일몰 이미지를 사용했다. 이것이 보이는 방법이다. 내 노트북에 저장하고 beach_sunset.png라고 이름을 지었다.

Page 277.

<그림>

2. 이제 이 이미지를 JPEG 형식으로 변환하는 파이썬 코드를 작성해보자. 다음 코드는 우리가 필요로 하는 것을 정확하게 수행한다. convert.py라는 파일의 파이썬 코드를 저장한다.

<소스>

이 프로그램을 파이썬의 convert.py 커맨드로 실행하면 원래 PNG 이미지가 JPG 형식으로 변환되고 asbeach-susnset-conv.jpg에 저장된다.

Page 278.

3. 좋아! 이제 이 이미지에 대해 한 번 더 연산을 수행하고 그레이스케일(흑백 형식)으로 변환해보자. 사람들이 이미지를 흑백 형식으로 변환하여 향수를 부여하는 것이 일반적이다. 이것은 다음 커맨드 라인을 사용하여 쉽게 수행할 수 있다.

<소스>

이제 이 프로그램을 실행하면 disk-sunset-gray.png라는 이름의 디스크에 다른 이미지가 생성된다. 이 이미지는 다음과 같다.

<사진>

Page 279.

4. 좋아, 더 나아가 이미지 회전 및 뒤집기와 같은 몇 가지 작업을 수행해보자. 이러한 작업은 재미있는 웹 사이트에서 자주 사용되며 이미지가 있는 곳에서 간단히 재생할 수 있다. 다음 코드는 이미지를 180도 회전시키는 데 도움이될 것이다.

<소스>

기본 이미지로 이 코드를 실행하면 여기에 표시된 것처럼 180도 회전된 이미지, 즉 이미지가 거꾸로 보인다.

<그림>

Page 280.

5. 회전하는 이미지가 좋지만 이미지를 뒤집을 수 있다면 정말 재미있을 것이다. PIL은 실망스럽지 않으며 이미지를 수평 및 수직으로 뒤집을 수 있는 옵션을 제공한다. 다음 코드는 뒤집기 작업을 수행하는 데 도움이 된다.

<소스>

이제 이 코드를 실행하면 두 개의 이미지가 생성된다. 다음 이미지는 원본 이미지와 동일하지만 가로로 뒤집힌다(미러가 이미지의 오른쪽에 있는 것처럼). 산이 이미지의 오른쪽으로 어떻게 움직였는지 살펴본다.

Page 281.

다음 스크린샷은 원본 이미지의 대칭 이미지로, 수직으로 뒤집는다. 공지사항에 따르면, 산은 여전히 이미지의 왼쪽에 있지만 거꾸로 되어있다. 비슷한 것은 석양의 운명이다. 일출처럼 보이나?

<그림>

작동원리

이 절에서는 PNG와 JPEG의 두 가지 이미지 형식을 다룬다. PNG(Portable Network Graphics) 파일은 품질을 저하시키지 않으면서 사진 이미지를 압축하는 비손실 파일dlek다. 인터넷 그래픽을 위한 훌륭한 파일 형식이다. 여러 배경과 함께 사용할 수 있으며 투명도를 지원한다. 첫 번째 코드 예제인 beach_sunset.png에 사용된 이미지의 경우 파일 크기는 550KB이다.

JPEG (Joint Photographic Experts Group)는 손실 압축 기술을 사용하여 이미지를 압축한다. JPG는 이미지 섹션을 픽셀 혹은 타일로 축소하여 이미지를 압축한다. JPG 이미지는 설정에 따라 N:1의 비율로 압축될 수 있다. 이미지가 쉽게 압축되고 인터넷상의 이미지에 액세스하기 위한 인터넷 대역폭을 줄일 수 있기 때문에 JPG는 인터넷 상의 이미지 표준이됐다. 변환된 이미지는 파일 크기가 450KB로 PNG 파일보다 거의 20 % 더 작음을 알 수 있다.

Page 282.

이제 파이썬 코드를 살펴보자. Image 클래스는 PIL 모듈에서 가져온다. Image 클래스는 이미지를 디스크에 저장하는 것과 같은 다른 작업과 마찬가지로 이미지의 열기, 로드 및 변환을 담당한다. 이 예제에서는 open() 메소드를 사용하여 PNG 이미지를 열고 save() 메소드를 사용하여 이미지를 JPEG 형식으로 저장한다.

두 번째 예제에서는 이미지를 흑백 형식으로 변환한다. RGB 및 CMYK 형식과 마찬가지로 흑백을 나타내는 L 형식도 있다. 이미지를 L 형식으로 변환하는 동안 ITU-R luma 형식(L = R * 299 / 1000 + G * 587 / 1000 + B * 114 / 1000)을 사용한다.

파이썬 코드에 관해서도 다시 Image 클래스를 사용하여 파일을 opne() 메소드를 사용하고 convert() 메소드를 사용하여 인수 L로 이미지를 흑백으로 변환한다. 마지막으로 save() 메소드를 사용하여 디스크에 파일을 저장한다. 여기서 파일 형식을 PNG로 유지한다.

세 번째 예제에서는 동일한 Image 클래스와 open() 이미지를 사용하여 img 객체를 가져온다. 이 객체는 회전 각도를 인수로 사용하여 rotate() 메소드를 호출하는 데 사용된다. 이 예제에서는 이미지를 180도 회전하고 마지막으로 save()를 호출하여 회전된 이미지를 sunset180deg.jpg라는 이름의 디스크에 저장한다.

마지막 예제에서는 PIL 모듈의 transpose() 메소드를 사용하고 Image.FLIP_LEFT_RIGHT 및 Image.FLIP_TOP_BOTTOM 속성을 사용하여 이미지를 왼쪽에서 오른쪽 및 위에서 아래로 두 방향 회전한 sunset_horizontal_flip.png 및 sunset_vertical_flip.png라는 이름으로 저장한다.

더 알아보기

Pillow 모듈에는 리사이징, 붙여 넣기, 자르기와 같이 이미지에서 보다 복잡한 작업을 수행하는 데 도움이 되는 더 많은 메소드가 있다. 9장의 다음 레시피에서 살펴볼 것이다.

리사이징, 자르기 및 썸네일 생성

이미지 크기를 조정하고 이미지를 자르는 것과 같은 작업은 매우 일반적이지만 프로그래밍 방식으로 시도하면 이러한 작업이 지루할 수 있다. 이러한 작업을 어떻게 수행할 수 있는지 살펴보자.

Page 283.

준비하기

이 레시피에서는 Pillow 라이브러리를 사용하여 이미지의 크기를 조정하고 자른다. 이미 Pillow 모듈을 설치했으므로 설치에 대해 걱정할 필요가 없다. 목표에 집중하자.

실행방법

1. 먼저 주어진 크기로 이미지 크기를 조정하는 방법을 살펴보자. 파이썬 파일 resize.py를 생성하고 다음 코드 조각을 붙여넣는다.

<소스>

2. 또한 인터넷에서 이미지를 다운로드하고 sunset.jpg라고 이름을 지정한다. 내 이미지는 이렇게 보인다.

<그림>

Page 284.

3. 이제 python resize.py 커맨드로 파이썬 코드를 실행하고 디스크의 sunset-resize.jpg 이미지를 살펴본다. 이미지의 크기가 조정되고 다음 스크린샷과 유사하게 보인다.

<그림>

이미지는 예상대로 256x256 픽셀이다.

<그림>

Page 285.

4. 프로그래밍에서 종종 필요로하는 또 다른 작업은 이미지에 대한 썸네일을 생성하는 것이다. 썸네일은 원본 이미지의 미리보기로 사용되며 일반적으로 영화 리뷰 웹사이트 혹은 서적 출판 웹사이트에서 사용된다. Pillow 모듈을 사용하여 썸네일을 쉽게 생성할 수 있는지 살펴보자. 파이썬 파일을 생성하고 이 코드를 추가한다.

<소스>

이제 이 코드를 실행하면 원본 이미지의 썸네일인 sunset.thumbnail.jpg 이미지가 생성되며 아래 스크린샷과 같이 표시된다. 이미지의 크기를 보면 128x128(128x80 픽셀)이 아니다. 이것에 대한 이유를 약간 다룰 것이다.

좋아! 따라서 이미지를 위해 생성된 썸네일을 가지고 프로필 썸네일 혹은 혹은 미리보기 이미지로 웹사이트에서 사용될 수 있다.

<그림>

5. 이 레시피에서 다룰 다른 작업은 이미지 자르기이다. 다음 코드는 우리가 필요로 하는 것을 정확하게 수행한다.

<소스>

Page 286.

위의 파이썬 조각을 실행하면 디스크에 생성된 원본 일몰 이미지에서 자른 이미지 sunset-crop.jpg가 표시된다. 이것은 다음과 같다.

<사진>

Pillow가 있는 이미지에서 여러 작업을 매우 쉽고 직관적으로 수행할 수 있는 방법을 살펴보면 좋다. 그러나 이러한 작업은 어떻게 작동하나? 사용된 메소드는 무엇인가? 그것들을 살펴보자.

작동원리

이 레시피에서는 필로우의 Image 클래스를 사용하여 이미지의 크기를 조정하고 이미지를 자르고 원본 이미지에서 썸네일을 생성했다.

첫 번째 코드 조각에서 open() 메소드로 sunset.jpg 이미지를 열었다. 그런 다음 크기 조정된 이미지의 너비와 높이가 나열된 튜플 인자(argument)와 함께 resize() 메소드를 사용했다. 그런 다음 파일 이름이 sunset-esize.jpg이고 JPEG 파일 형식인 save() 메소드를 사용하여 디스크에 파일을 저장했다.

Page 287.

두 번째 조각에서는 open() 메소드를 사용하여 이미지를 열고 이미지 객체를 가져왔다. 그런 다음 이미지 객체에 있는 Image 클래스의 thumbnail() 메소드를 사용하여 썸네일을 생성했다. thumbnail() 메소드는 이미지 크기(128 x 128)를 사용하고 BICUBIC 이미지 필터링 메커니즘을 사용한다. 마지막으로, 대상 파일 이름이 sunset.thumbnail.jpg로 설정된 save() 메소드로 이미지를 저장했다. 썸네일의 크기를 살펴본 결과 정확히 128x128 크기가 아니라는 것을 알았다. 실제로는 128 x 80이다. PIL은 이미지 너비를 128 픽셀로 유지한 다음 높이를 다시 계산하여 이미지의 비율을 유지한다.

그리고 세 번째 예제에서, Pillow 모듈의 Image 클래스의 crop() 메소드로 이미지를 잘라냈다. crop() 메소드는 원본 이미지에서 이미지를 조각낼 필요가 있는 네 개의 좌표를 모두 가져온다. 이 예제에서는 원본 이미지를 자르기 위해 좌표를 left = 965, top = 700, right = 1265, bottom = 960으로 지정했으므로 예제에서 보았듯이 얻은 결과는 태양의 이미지이다.

더 알아보기

썸네일 생성 예제에서, 더 명확하게 하기위해 이미지에 적용된 필터에 대해 간단히 언급했다. 9장에서 자세히 다루지는 않겠지만 관심이 있다면 http://pillow.readthedocs.io/en/3.0.x/releasenotes/2.7.0.html#default-filter-for-thumbnails에서 자세히 살펴본다.

복사-붙여넣기 및 워터마킹 이미지

이 레시피에서는 이미지를 워터 마킹하는 디자이너와 마케팅 담당자가 많이 사용하는 한 가지 작업에 대해 다룬다. 또한 이미지를 서로 복사-붙여넣기 하는 재미있는 방법을 살펴볼 것이다. 계속 살펴보자.

Page 288.

준비하기

이 레시피에서는 이미지를 복사-붙여넣기를 위해 Pillow를 계속 사용하지만 워터마킹을 위해 다른 파이썬 모듈인 wand를 사용한다. 따라서 정상적인 연습처럼 코드 작성을 시작하기 전에 먼저 wand 모듈을 설치하자. 우리가 가장 좋아하는 도구인 파이썬의 pip로 wand를 설치한다.

<소스>

모듈을 이미 설치했나? OK, 이제 들어가자.

실행방법

1. 먼저 Pillow로 복사-붙여넣기 작업을 수행하는 방법을 살펴보자. 이전 절에서는 원본 이미지, sunset.jpg 및 원래 이미지에서 자른 태양 이미지인 sunset-crop.jpg의 두 가지 이미지가 있음을 기억한다. 다음 파이썬 코드에서 이 이미지들을 사용할 것이다.

<소스>

Page 289.




