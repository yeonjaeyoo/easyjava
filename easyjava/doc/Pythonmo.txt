3장 주석

It is an interface that helps to eliminate morphological affixes from the tokens and the process is known as stemming.
그것은 토큰에서 형태학상 접사를 제거하는 데 도움이 되는 인터페이스이고, 프로세스는 스테밍으로 알려졌다.

Eliminate affixes from token and stem is returned.
토큰에서 접사를 제거하고 어간이 반환된다.

Page 59.

Eliminate words which occur often and have not much significance from context point of view.
자주 발생하고 뷰의 컨텍스트 포인트에서 중요하지 않은 단어를 제거한다.

Perform the task of splitting text into stop words and tokens.
텍스트를 불용어와 토큰으로 분할하는 작업을 수행한다.

In the document vectors,  generate the keyword for the given position of element.
문서 벡터에서, 지정된 위치의 요소에 대한 키워드를 생성한다.

Perform mapping of text into strings
문자열로 텍스트의 매핑을 수행한다.

Eliminate common words that have no search significance
검색 의미가 없는 일반적인 단어를 제거한다.

Initialise the vector with 0's
0으로 벡터를 초기화

simple Term Count Model is used
simple Term Count 모델이 사용된다.

Attach a position to keywords that performs mapping with dimension that is used to depict this token
이 토큰을 묘사하는 데 사용되는 차원과 매핑을 수행하는 키워드 위치를 연결한다.

Page 65.

품사 태그는 단어가 명사, 동사, 형용사 등인지의
=>품사 태그는 단어가 명사, 동사, 형용사 등의

많은 애플리케이션이 있다.
=>품사 태깅의 많은 애플리케이션이 있다.

-기계 학습 알고리즘을 선택
=>- 기계 학습 알고리즘 선택

품사 태그 소개
=> 품사 태깅 소개

품사 태그는
=> 품사 태깅은

POS 태그를
=> POS 태깅을

생각해 보자.
=>살펴본다.

Page 66.

다음 태거는 태그를 위해 
=>다음 태거는 대깅을 위해

Page 67.

정규 표현식도 조회할 수 있는
=>정규 표현식도 질의할 수 있는

Page 68.

POS 태그를 
=>POS 태깅을

또한 animal은 명사를 의미한다.
=> 또한 동물을 의미하는 명사이다.

이제 튜플의 시퀀스가 지정된 텍스트로부터 생성될 수 있는 예제를 살펴 보자.
=> 이제 지정된 텍스트로부터 튜플의 시퀀스가 생성될 수 있는 예제를 살펴 보자.

지금, 단어 및 태그로 튜플 변환하는 ~ 살펴 보자.
=> 지금, 튜플(word 및 pos 태그)을 단어 및 태그로 변환하는 다음 코드를 살펴보자.

Page 69.

몇 가지 일반적인
=>일반적인

생각한다.
=>고려한다.

또한 파이썬에서 ~ 제공할 수 있다.
=>파이썬에서도 딕셔너리를 사용하여 POS 태그를 토근에 제공할 수 있다.

파이썬에서 ~ 살펴 보자.
=> 파이썬에서 딕셔너리를 사용한 튜플(word:pos 태그)의 생성을 보여주는 다음 코드를 살펴보자.

Page 70.

