Preface

비즈니스 프로세스 자동화는 특정 기능 혹은 워크플로우를 수행하는 기술에 기반한 활동 자동화이다. 프로세스 효율성, 일관성 및 반복성을 목표로 하는 조직적 변화이다. HR 온보딩, 리드 관리, 재무 보고서 및 인보이스와 같은 많은 비즈니스 프로세스를 파이썬 모듈을 사용하여 조직 전체에서 이러한 목표를 달성하기 위해 쉽게 자동화할 수 있다.

이 책의 장에서 다루는 파이썬 레시피는 지식을 습득하고 비즈니스 흐름을 자동화하는 방법을 도와줄 것이다. 고전적인 문제 해결 패턴으로 HR, 마케팅, 고객 지원 등과 같이 파이썬 레시피의 도움을 받아 자동화하고 혁신할 수 있는 다양한 분야를 살펴본다.

What this book covers

1장, '웹을 사용한 작업' 월드 와이드 웹의 흥미로운 세계에 대해 이야기하고 파이썬 모듈을 사용하여 웹과 상호작용할 수 있는 다양한 방법을 다룬다.

HTTP 웹 요청의 기본을 다루는 것으로 시작하여 독자가 웹 스크래핑 및 웹 콘텐츠 다운로드와 같은 고급 주제로 천천히 이동한다. 또한 1장에서는 자신만의 비동기 웹 서버를 작성하고 웹 자동화를 이해하고 구축하는 데 도움이 된다.

마지막 절에서 1장은 파이썬 레시피를 사용한 마케터가 정기적으로 직면하는 고전적인 상황-리드 생성을 자동화하는 데 도움이 된다.

2장, 'CSV 및 Excel 워크시트 작업'은 CSV 및 Excel 시트를 사용하여 중복 작업을 단순화하고 자동화하는 데 도움이되는 파이썬 레시피를 알려준다. 컴퓨터가 일상 생활의 일부가 될 때까지 사무실 기록은 파일로 저장되고 사무실 책상에서 관리된다. Excel 시트의 세계 덕분에 훨씬 더 나은 방식으로 데이터를 관리할 수 있다.

2장의 첫 번째 부분은 CSV 파일에 대한 읽기/쓰기 작업을 수행하는 데 도움이 된다. 또한 자신만의 CSV 방언(dialects)을 쓸 수 있도록 도와준다. 방언이 의미하는 바를 모르는가? 자, 2장에서 찾자! CSV 파일 및 파이썬 코드를 사용하여 HR 프로세스의 필수 요소인 직원 정보 관리의 자동화하는 방법에 대해서도 다룬다.

2장의 두 번째 부분은 Excel 워크시트에서 데이터 검색 및 삽입과 같은 작업 수행에 대한 지식을 제공한다. 또한 셀 서식 지정, 수식으로 수리적 작업 수행 및 차트 삽입과 같은 일부 고급 작업을 다룬다. 마지막으로 좋은 예를 들어서, 재무 팀을 위해 여러 해 동안 손익 계산서(income statement) 분석을 자동화하는 방법을 설명한다.

3장, 'PDF 파일 및 문서로 크리에이티브하기'는 Word 문서 및 PDF 파일이 비즈니스 전문가가 가장 일반적으로 사용하는 파일 형식이된 방법과 파이썬을 사용하여 PDF 및 Word 문서에서 일상 작업을 자동화하는 방법을 살펴본다. 고객에게 송장을 보내거나 공급 업체에 요구 사항을 보내고 싶은가? 기업은 종종 이러한 요구에 따라 PDF 파일과 Word 문서를 사용한다.

3장에서는 먼저 파이썬 레시피를 사용하여 PDF 파일로 수행할 수 있는 작업을 다루는 것으로 시작한다. PDF 파일 생성 및 읽기, 복사 및 머리말 및 꼬리말 형식을 만들기 위한 조작까지도 익힐 수 있다. 간단한 파이썬 레시피로 많은 PDF 파일을 병합할 수 있다는 것을 알고있나? 조직의 급여 전표 생성 프로세스를 자동화 하시겠는가? 흥미로운 것 같나? 그럼 3장은 분명히 당신을 위한 것이다.

3장에서는 Word 문서 작업도 다룬다. Word 파일에 데이터를 읽고 쓰는 것에 대한 지식을 쌓을 수 있다. 테이블, 이미지 차트 추가도 가능하다. 2장은 그것을 다룬다. 이것이 충분하지 않은 경우, 3장은 HR 프로세스의 예제를 취하고 비즈니스 유닛을 기반으로 신입 사원을 위한 맞춤식 신입 사원 오리엔테이션 프로그램을 수립하도록 도와준다.

4장, 'SMS 및 음성 알림 재생'은 SMS 및 음성 알림을 통해 전혀 새로운 자동화 세계를 열어준다. 클라우드 텔레포니에 대한 훌륭한 소개부터 시작하여 유스 케이스를 다룬다.

4장의 초기 절에서는 SMS 텍스트 메시지가 특정 상황에서 유용한 방법을 살펴본다. SMS 메시지를 전송하고 파이썬 레시피로 들어오는 텍스트를 받는 방법을 다룬다. SMS 알림 절은 도미노 피자의 고객 서비스 프로세스를 자동화하는 방법을 다룬다.

4장에서는 음성 알림에 대해서도 자세히 다룬다. 음성 메시지를 전송하고 파이썬 코드 조각으로 들어오는 음성 호출을 받는 것과 같은 음성 워크플로우에 익숙해진다. 또한 자체 컨택 센터를 구축하여 고객 지원을 자동화할 수 있다는 것을 알고있나? 관심이 있나? 4장을 살펴본다.

5장. '전자 메일을 사용한 재미'는 전자 메일 메시지 전송, 전자 메일 컨텐츠를 MIME으로 아름답게 꾸미기, 첨부 파일 작업과 같은 흥미로운 파이썬 레시피를 다룬다. 전자 메일은 지난 20-30년간 유비쿼터스가 됐다. 도처에 그것들을 본다! 너무 많은 이유로 그들과 함께 일하는 데 익숙하다. 하지만 파이썬 스니펫으로 받은 편지함을 조작할 수 있다는 것을 알고 있나?

5장은 또한 전자메일 대화를 가져와서 읽고 메시지를 삭제하여 받은편지함을 정리하는 데 도움이 된다. 메시지를 선택하기 위해 라벨을 추가하거나 전자메일 암호화에 대해 더 알고 싶은가? 자, 5장에서는 그것을 다룬다. 그리고 물론, 5장은 파이썬 레시피로 고객 지원 플로우를 자동화하는 예제로 끝난다.

6장, '프리젠테이션 등'은 파이썬을 사용하여 자동으로 프리젠테이션을 생성할 수 있는 다양한 방법을 탐구한다. 6장에서는 새로운 프레젠테이션을 작성하고 컨텐츠 혹은 슬라이드를 추가하는 방법을 보여준다. 또한 기존 프레젠테이션을 읽거나 업데이트하고 차트, 표 및 그림을 삽입하는 방법을 보여준다. 기본적으로 필요한 모든 작업을 수행할 수 있다. 물론, 파이썬 레시피를 사용하여 판매 관리자를 위한 매주 판매 보고서를 자동화한다. 이것은 모든 영업 관리자에게만 제공된다.

7장, 'API의 힘'은 흥미로운 API 세계로의 여행을 안내한다. API는 오늘날 월드 와이드 웹의 중요한 부분이다. 서비스에 대한 이야기, 정보 공유 및 기타 많은 작업은 API와 Webhooks에 의존한다.

7장에서는 REST API에 대한 소개부터 시작하여 REST 철학의 기본사항을 다루며 자신의 API를 개발하는 데 필요한 지식을 제공한다. 또한 파이썬 레시피 및 트위터 REST API를 사용하여 마케팅 팀의 필수 사용 사례인 소셜 미디어에서 제품 업데이트 일정을 자동화하는 방법을 보여준다.

다음 절에서는 오늘날 웹의 핵심 요소인 Webhook을 다룬다. 파이썬 레시피를 사용하여 리드 관리를 자동화하기 위한 Webhook을 구현하고 비즈니스 전문가가 웹 훅을 활용하는 방법을 명시한다.

2017.11.13

How to do it

이 절에는 레시피를 수행하는 데 필요한 단계가 포함된다.

How it works

이 절은 일반적으로 이전 절에서 발생한 일에 대한 자세한 설명으로 구성된다.

There's more

이 절은 독자가 레시피에 대해 더 잘 이해할 수 있도록하기 위해 레시피에 대한 추가 정보로 구성된다.

See also

이 절에서는 레시피에 대한 유용한 정보에 대한 유용한 링크를 제공한다.

Conventions

이 책에서는 다양한 종류의 정보를 구별하는 여러 텍스트 스타일을 찾을 수 있다. 다음은 이러한 스타일의 예제와 그 의미에 대한 설명이다.

데이터베이스 테이블 이름, 폴더 이름, 파일명, 파일 확장명, 경로명, 더미 URL, 사용자 입력 및 Twitter 핸들의 텍스트 코드 단어는 다음과 같이 표시된다. : "우리는 fromstring() 메소드를 사용하여  페이지(문자열 형식) 내용을 HTML 형식으로 변환한 트리를 얻는다."

코드 블록은 다음과 같이 설정된다.

try:
    r = requests.get("http://www.google.com/")
except requests.exceptions.RequestException as e:
    print("Error Response:", e.message

커맨드 라인 입력 혹은 출력은 다음과 같이 작성된다.

pip install -U requests

새로운 용어와 중요한 단어는 굵게 표시된다. 예를 들어 메뉴 혹은 대화 상자에서 화면에 표시되는 단어는 다음과 같이 텍스트에 표시된다. "이제 전자 메일과 패스워드를 입력했으므로 마지막으로 양식을 제출하고 로그인 버튼을 클릭한다."

경고 혹은 중요한 메모는 다음과 같은 상자에 나타난다.

팁과 트릭은 다음과 같이 보인다.

<앞표지>

Automate it!

비즈니스를 확장시키는 레시피

자동 파일럿을 사용하여 삶을 편리하게하고 파이썬의 마법과 힘으로 비즈니스 프로세스를 효율적으로 만들 수 있다.

<뒷표지>

자동화하라! 파이썬으로 비즈니스 프로세스를 자동화할 수 있는 다양한 레시피를 제공하며, 파이썬이 시간 소모적이고 반복적인 비즈니스 작업을 보다 효율적으로 수행하는 데 얼마나 유용한지 이해할 수 있는 플랫폼을 제공한다.

고전적인 문제-솔루션 기반 접근법과 실제 사례를 통해 비즈니스 프로세스를 자동화하는 것에 대해 알아본다. 웹, 워크시트, 프리젠테이션 및 PDF 작업을 위한 파이썬 모듈에 대해 배우기 시작한다. 파이썬 레시피를 활용하여 HR 및 파이낸싱 프로세스를 자동화함으로써 효율성과 신뢰성을 높인다. 예를 들어, HR의 핵심 프로세스인 회사 급여는 파이썬 레시피로 자동화될 것이다.

파이썬 코드를 효과적이고 간편하게 사용하여 SMS 및 음성 알림을 관리하고 클라우드 텔레포니를 사용하여 비즈니스 요구 사항을 해결할 수 있는 가능성을 열어주는 방법을 살펴본다. 앞으로는 API, Webhook 및 전자 메일을 사용하여 마케팅 및 고객 지원 프로세스를 자동화하는 방법을 다룬다. 마지막으로, 다양한 파이썬 라이브러리를 사용하여 이 책은 데이터 솔루션을 커스트마이징하고 비즈니스 요구를 충족시키기 위해 보고서를 생성하는 지식을 제공한다.

독자가 배우는 것:

-비즈니스 프로세스를 자동화하고 파이썬 레시피를 효율적으로 사용한다.
-REST API의 기능을 탐색하고 Webhook을 구현한다. 트위터 REST API로 작업하고 파이썬으로 자동화된 트윗을 올린다.
-클라우드 텔레포니의 세계를 이해하고 파이썬으로 SMS 및 음성 알림을 통해 업무용 사례를 구현한다.
-이미지를 조작하고 파이썬의 컴퓨터 비전을 사용하여 얼굴 인식 및 비즈니스 작업 자동화 방법을 살펴본다. 조직에서 서류가 없는 것을 고려한 적이 있는가?
-봇에 대해 배우고 파이썬을 사용하여 자신의 것을 구현한다. AI를 봇에 통합하는 방법도 다룬다.
-데이터 필터링 및 시각화를 위한 파이썬 모듈을 사용하여 데이터 분석을 이해하고 데이터에 대한 흥미로운 통찰력을 얻을 수 있다.

2017.12.18

Page 14.

클라이언트 연결은 클라이언트가 생성한 모든 요청에 대해 수립되고

서버는 비즈니스 작업을 수행하고 클라이언트 소켓에 응답 본문을 전송한다.

응답이 모두 소모되면 클라이언트 연결은 종료된다.

이러한 모든 작업은 순차적으로 발생하므로 동기식으로 이루어진다.

웹의 데이터를 질의하고 사용자 정보를 검색하는 웹사이트의 경우를 살펴본다.

예를 들어, 웹사이트는 페이스북(Facebook)과 통합할 수 있으며, 사용자가 웹사이트의 특정 페이지를 방문할 때마다 페이스북(Facebook) 계정에서 데이터를 가져올 수 있다.

서버가 -> 서버는

이러한 I/O요청이 응답하는 데 더 오랜 시간이 걸리면, 서버는 응답을 기다리는 블록된다.

서버는 정지된다.
->서버가 중단될 수 있다.

Page 15.

확장하는 문제 
-> 확장 문제

나는 Tornado 프레임워크를 좋아하고 그 코드를 개발하는 것을 즐긴다. 여러분도 그랬으면 좋겠다!

철학에서 -> 방법으로

2018.01.25

1Page

이전의 장에서 -> 이전 장에서

엑셀 워크시트

엑셀 파일은

PDF파일을 생성, 읽기, 복사, 심지어 직접 머리글(header)과 바닥글(footer) 형식을 만들기 위해 조작하는 지식도 쌓을 수 있다.

많은 PDF 파일이

레시피에 적용

3장은

워드(Word) 문서 작업을 다룬다.

데이터를 워드 파일로 읽고 쓰는 것에 관한 지식을 쌓는데 도움을 준다.

표, 이미지, 차트를 추가하여 이름을 지정하는 것을 3장에서 살펴본다.

흥미로운가?

3장의->3장은

3장에서 설명한 라이브러리의 나머지 API도 사용하기 바란다.

이름 휴대용

이 레시피는 PDF파일의 정보를 추출하는 방법과 reader 객체를 사용하는 방법을 보여 줄 것이다.

PDF파일로 작업하기 위해서, 다음 커맨드로 설치할 수 있는 멋진 모듈인 PyPDF2를 사용한다.

Page 2.

설치되었나? => 설치했나?

이 파일은 인터넷에서 검색하고 쉽게 찾을 수 있다. 이 책의 코드 샘플도 다운로드하면 파일을 받을 수 있다.

3. 이제, PDF파일 reader 객체를 생성하는 파이썬 코드를 작성하자.

갖는다. => 얻는다.

코드 조각의 출력은 => 코드의 출력은

PDF ~ 객체를 사용하여 파일의 메타데이터를 얻는 방법을 확인한다.

5. 좋아, 멋지다. 

하지만 파일의 콘텐츠를를 추출하고 싶은가?

코드 조각으로 => 코드로

그럼 앞의 코드는 무엇을 할 수 있을까? print 구문이 명백하다. 그래,

내용을 -> 콘텐츠를

Page 3

콘텐츠는 부분적이지만(스크린샷의 페이지 전체를 포함할 수 없기 때문에) 보시다시피, PDF파일과 형식이 다르다.

100%는 아니지만, PDF파일 컨텐츠를 상당히 정확하게 얻을 수 있다.

6. 그것으로 책의 개요를 알아보는 것은 어떨까?

보시다시피, 그 책의 전체 개요를 알 수 있다.
그런 다음  Chapter 1부터 Chapter 18까지의 모든 장 이름과 Appendix A부터 Appendix H까지의 부록의 이름을 얻는다.

조각에서는 -> 코드에서는

조각에서 -> 코드는

메타 데이터를 -> 메타데이터를

책 세부 정보가 있다. => 책 세부 정보를 얻는다.

세번째 예제는 PdfFileReader 클래스에서 생성한 reader 객체를 사용하여, diveintopython 책의 첫번째 페이지를 가리켰다.

page 변수로 표시되는 page 객체가 생성된다.

내용을 => 콘텐츠를

코드 조각에서 => 코드에서

더 알아보기

우리는 => X

생성하고 싶다. => 생성하고 싶다. 그렇지?

PDF 문서 생성 및 복사

제공한다. => 얻는다.

자신의 PDF 파일을 생성하는 방법을 살펴보자.

준비하기

레시피에 대해 => 레시피는

또한 => X

방법을 => 방법도

우리는 => X

Page 4.

내용을 => 콘텐츠를

~pdf를 시작한다. => ~ 를 선택한다.

내용을 => 콘텐츠를

Exercise.pdf는 두 페이지로 구성된다.

2. 

연습문제의 => 연습의

내용을 => 콘텐츠를

앞의 코드에서, PyPDF2 모듈에서 적절한 클래스를 불러온다.

연습 파일을 => Exercise.pdf를

나중에 PdfFileWriter를 인스턴스화하고 새 파일에 콘텐츠를 쓰는 데 사용되는 outfile라는 객체를 생성한다.

3.

페이지 치수는 일반적으로 8.5 x 11 인치이지만 이 경우에는 612 x 792 포인트 단위로 변환해야 한다.

Point는 포스트스크립트 포인트(PostScript point)라고 알려진 데스크탑 출판용 포인트이다.

4.

내용을 => 콘텐츠를

5.

좋아, 훌륭해! 이제 새로운 PDF파일에 사용할 writer 객체와 콘텐츠가 있다.

다음 코드가 이를 달성한다.

파일핸들 -> 파일 핸들

내용을 => 콘텐츠를

보시다시피 첫 페이지는 빈 페이지이고 두 번째 페이지는 Exercise.pdf파일의 첫번째 페이지의 콘텐츠를 포함한다. 좋아, 그렇지 않아!

6.

하지만, 항상 처음부터 PDF파일을 생성해야한다.

7.

코드 조각에서 => 코드에서

문자(letter) => letter

8.

내용을 => 콘텐츠를

2018.01.29

다음 코드에서 볼 수 있듯이, 새로운 라인 Welcome to Automate It!을 추가하고, 그 다음 Created by Chetan 라인으로 이어진다.

앞 코드의 출력은 다음 스크린샷과 같은 콘텐츠를 포함하는 PDF파일이다.

많은 PDF파일의 헤더와 풋터를 한번에 업데이트할 수 있을까?

이 레시피는 PDF파일에서 흥미롭고 가장 자주 수행되는 작업을 진행하도록 하자.

Page 6.

PdfFileMerge => PdfFileMerger

2. output.pdf파일을 열고 직접 살펴본다.

3. 방법을 살펴본다.
fps모듈을 사용하여 PDF 파일(Automateit.pdf)을 생성한 이전 레시피의 예제를 호출하자.
이제 헤더 및 풋터 정보가 포함된 유사한 파일을 생성해야 한다면 어떻게 해야하는가? 다음 코드가 바로 그 기능을 한다.
조각의 출력 => 코드의 출력
PDF문서의 헤더 및 풋터를 조작할 수 있는 방법을 살펴보자.

4.

이전 레시피의 myPdf.pdf파일에 빈 페이지를 추가한 것을 기억하는가?

PDF파일에서 빈 페이지를 제거하려면 어떻게 해야할까?

5.

다음과 같은 파이썬 코드로 PDF파일의 메타 데이터를 쉽게 편집할 수 있을 것이다.

PDF파일에 편집된 메타데이터를 성공적으로 추가한 방법을 살펴본다.

Page 8.

그런 다음 현재 작업 디렉토리의 모든 파일을 살펴보고 파이썬의 list ecompressive를 사용하여. pdf 확장자를 가진 모든 파일을 선택했다.

2. PDF 클래스로 새 PDF파일을 생성할 때 헤더와 풋터를 정의하는 header()와 footer() 두 개의 메소드를 오버로드한다.

3. 이탤릭

또한 중심에 두고 페이지 하단에서 15mm 위에 표시했다.

4. header() 메소드는 헤더 셀을 생성하여 맨 오른쪽에 배치했다. 
마지막으로, 헤더 아래에 20 픽셀의 구분 줄을 추가했다.

6. 내용은 => 콘텐츠는

7.

만약 letter 크기였다면, 한 페이지에 적어도 20개의 라인을 수용했을 것이다.

세 번째 코드 예제에서 => 세 번째 코드 예제의

컨텐츠가 없는 경우 페이지가 무시되고 새 PDF파일에 추가되지 않는다.

네 번째 조작에서는 => 네 번째는

addMetadata() 메소드는 PDF파일에 대해 수정해야 하는 속성을 전달할 수 인자로 키 값 쌍을 사용한다. 

마지막 예제를 들어, 페이지를 실제로 회전시키는 rotateCounterClockwise()를 사용하는 것을 제외하고는 나머지 코드는 따로 설명할 필요가 없다고 생각한다.

더 알아보기

이해했다. => 살펴봤다.

이제는 실제 삶의 예제를 들어 상황을 살펴볼 때이다.

Page 9.

회사의 재무 관리자가 급여 명세서 작성 절차를 더 빨리 만들고 싶어 하는 조직의 사용 사례를 예제로 살펴보자.

재무 관리자는 그 작업이 평범할 뿐만 아니라 많은 시간을 소모한다는 것을 깨달았다.

재무 관리자는 과정을 자동화 하는 것을 선택하고 당신에게 접근한다.

좋아, 3장을 통해 배운 것과 함께, 틀림없이 여러분을 위한 케이크 조각이 될 것이다. 그 일을 하자.

작동원리 -> 실행방법

급여명세서는 무엇이 포함되어 있을까?

그래서 직원들의 정보를 얻고, 급여와 공제를 위한 표를 추가하고, 그리고 그 달에 지불된 총 급여에 대한 항목을 추가할 필요가 있다.

Page 10.

다음은 헤더, 풋터 및 급여명세서 세부 정보를 보여주는 급여명세서의 양식이다.

작동원리

실제 시나리오에서는 직원용 테이블에서 가져온 SQL 질의로 검색할 수 있다.

그리고 나서 급여명세서를 생성하기 위한 자신의 메소드를 썼다.

회사 이름(이 경우에는 Google)의 맨 위에 있는 헤더와 급여명세서가 있는 기간이 포함된다.

테이블 생성하는 HTML문서를 만들고 add_html() 메소드로 급여, 세금 및 총 급여 정보를 급여명세서에 추가했다.(확인)

끝으로, output() 메소드로 PDF파일에 이 모든 정보를 추가하고 급여명세서를 payslip_<employee_id>으로 이름을 붙였다.

Page 11.

예 => 그래

exercise.pdf를 암호화하고, 패스워드 P@$$w0rd로 보안을 설정하고, EncrypEnxercise.pdf로 이름을 변경한다.

나는 재무 관리자가 행복할 거라고 말할 것이다.

그것은 독자들에게 맡길 것이다.

매우 직설적으로 말했다. 문서를 참고한다.

PDF 파일 작업은 이 절의 끝 부분에 있다.

다음 절에서는 문서(.docx) 작업을 시작하고 문서에서 제공하는 기능을 감사할 것이다.

워드 문서 읽기

이동했다. => 변경됐다.

이 변경 작업을 수행했다. => 이러한 변화를 시도했다.

실행방법

1.

연습이다. => 작업이다.

2.

코드 조각에 => 코드에서도

3.

documnet 객체인 => 문서 객체인

단락은 문서에 있는 라인이다.

문서의 제목이 문서의 첫 번째 라인이라고 가정하면, 문서의 단락에 대해 0의 색인을 받고 제목의 텍스트를 얻기 위해 text 속성을 호출한다.

어떻게 출력하는지 확인한다. => 출력 방법을 확인한다.

4.

와우 => 와

그럼 이번에는 관심 있는 워드 문서의 다른 속성을 살펴보자.

당신이 => X

7월 2일 오전 4시 24분

또한, 문서의 다섯번째 개정 버전이기 때문에 문서가 다섯 번 변경됐다.

5. 자, 이제 좀 더 대담하게 문서의 아래 쪽에 표를 살펴본다.

테이블을 => 표를

코드 조각을 => 코드를

6.

테이블을 => 표를

하나의 테이블 => 하나의 표

tables[0]으로

테이블 변수 => table 변수

7. 테이블은 => 표는

8.

0 인덱스 => 0번째 인덱스

9.

근본적으로, 열 값을 읽고 있다.

11.

그래서 이제 워드 문서를 읽는 데 전문가가 됐다.









