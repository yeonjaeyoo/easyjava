네트워크 확장성은 애플리케이션에서 위치한 더 많은 수요와 같은 방식으로 애플리케이션을 구성하는 것과 연관이 있다.

여러 분야 => 다양한 분야

증가시켜 => 증가시키는

서버를 추가에 의해서 성취될 수 있다. => 서버 추가로 달성할 수 있다.

대기 시간에 => 대기 시간이

너무 ~ 있다. => 네트워크 파이프를 통해 너무 푸시될 수 있다.

종종 => 주로

시스템에 대한 => 시스템에서

사용하면 => 사용하는 것은

다른 => 그 외

실행할 수 있다. => 실행할 수 있게한다.

블록된 ~ 실행한다. => 일부가 블록되는 동안 실행을 위해 그 외 스레드를 허용하는 것은 애플리케이션 처리량을 증가시킬 수 있다.

운영체제 => 띄어쓰기 확인

이러한 ~ 후보이다. => 확인해야함

즉 ~ 해결하지 않는다. => 확인해야함

같은 ~ 사실이다 => 확인해야함

파라미터 => 매개변수(?)

이 건축 기능 => ?

개선하기 => 향상하기

하나의 스레드에 의해 => 하나의 스레드에서

새로운 요청을 ~ 처리된 후다 => 확인해야함

별도의 쓰레드를 => 별도의 스레드를

접속과 관련된 요청이 => 접속과 그와 관련된 요청이

Page 2.

이것은 => X

많은 수의 스레드의 => 다수의 스레드

의미한다 => 의미할 것이다.

목적은 => 목적이

그 후 => 이 후

일련의 => X

명령어 => 커맨드

통하거나 => 사용하거나

에 나타낸다. =>에서 설명한다.

스레드에 의해 => 스레드에서

처리하고 => 처리되고

요청을 ~ 있다. => 요청과 특정 오브젝트와 연관이 있다.

요청은 ~ 대기한다. => 확인

설명하는 것은 아니지만, ~ 사용된다. => 설명하지는 않지만, 스레드 풀에서 종종 사용된다.

값 비쌀 수 있다. => 비싼 비용이 든다.

여러 클라이언트가 => 클라이언트가 다수의 요청을

연결에 ~ 피해야 한다. => 확인

존재하는 => 요청은 존재하는

다른 요청에 => 그 외 요청에서

이 상태 정보는 => 상태 정보는

thread-per-request 접근 => thread-per-request 방법

보여준다. => 살펴봤다.

장의 나머지에서 => 이 장의 나머지 부분에서

사용을 위한 기초를 => 사용의 기초를

Page 3.

주어질 때 => 주어지면

손실에 대한 가능성없는 => 손실의 가능성없는

이 맵은 => Concur~Map

지도(map)은 => 맵은

사용한다 => 사용할 것이다.

이것은 => run 메소드(앞에 추가)

보유한다 => 저장할 것이다.

main 메소드는 ~ 같다. => 확인

수락하는 것을 => 수락되는 것을

검색하기 위한 => 검색하기위해



